% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ring_modify.R
\name{ring_modify}
\alias{ring_modify}
\title{Edit ring borders visually}
\usage{
ring_modify(ring.data, del = NULL, del.u = NULL, del.l = NULL,
  add = FALSE)
}
\arguments{
\item{ring.data}{A matrix or array produced by \code{\link{ring_detect}}.}

\item{del}{A numeric vector giving the border numbers to be deleted.}

\item{del.u}{A numeric vector giving the border numbers to be deleted 
on the upper path.}

\item{del.l}{A numeric vector giving the border numbers to be deleted 
on the lower path.}

\item{add}{A logical value indicating whether to re-add ring borders.}
}
\value{
A matrix or array representing the tree ring image.
}
\description{
This function can delete existing ring borders 
or add new borders by clicking on the image.
}
\details{
This function is used to delete existing ring borders, or to add new 
borders by interactively clicking on the image segments.

If the user creates only one path (\code{incline = FALSE}), the argument 
\code{del} is used to delete ring borders. If the user creates two paths 
(\code{incline = TRUE}), arguments \code{del.u} and \code{del.l} are used 
to delete ring borders.

If \code{add = TRUE}, graphical windows where image segments are plotted 
will be activated sequentially. When a graphical window is activated, 
the user can add new borders by left-clicking the mouse along the path. 
This visual selection process can be terminated by clicking the right 
button and selecting "Stop" from the menu, or from the "Stop" button on 
the top-left corner of the graphical window (depending on the R version). 

Once the user terminates the visual selection process, the current 
graphical window will be closed automatically, and the graphical window 
of the following segment is activated. When all graphical windows are 
closed, this function will re-open graphical windows and plot new borders.

This function can perform both operations (deletion and addition) in 
one call. A deletion of borders takes precedence over addition.
}
\examples{
img.path <- system.file("001.png", package = "MtreeRing")

## Read and plot the image:
t1 <- ring_read(img = img.path, dpi = 1200)

## Split a long core sample into 3 pieces to
## get better display performance and use the
## watershed algorithm to detect ring borders:
t2 <- ring_detect(ring.data = t1, seg = 3, method = 'watershed')

## Do not modify t2, but create a new array object t3. 
## Delete some borders without adding new borders:
t3 <- ring_modify(ring.data = t2, del = c(1, 3, 5, 19:21), add = FALSE)
}
\author{
Jingning Shi
}
